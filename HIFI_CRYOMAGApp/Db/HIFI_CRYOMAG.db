
# Initially generated by $Id: lvinput2db.xsl 2277 2014-11-30 18:36:45Z faa59 $
# 
# auto-generated EPICS records specify an asyn port "lvfp", but this can be changed - it just needs
# to match the first argument of the relevant lvDCOMConfigure() command in the IOC st.cmd 
# 
      
# 
# Definitions from configSection "frontpanel" in XML input file
#
#     lvDCOMConfigure("lvfp", "frontpanel", "/path/to/lvinput.xml")
# 
      
# Read LabVIEW control/indicator "MAIN Output" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ai, "$(P)MAIN:OUT:RBV")
{
	field(DESC, "LabVIEW 'MAIN Output'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAIN:OUT")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Message" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(stringin, "$(P)MESSAGE:RBV")
{
	field(DESC, "LabVIEW 'Message'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)MESSAGE")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "MAIN Status" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(stringin, "$(P)MAIN:STATUS:RBV")
{
	field(DESC, "LabVIEW 'MAIN Status'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)MAIN:STATUS")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "MAIN Ready?" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)MAIN:READY:RBV")
{
	field(DESC, "LabVIEW 'MAIN Ready?'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)MAIN:READY")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Read LabVIEW control/indicator "MAIN Errors" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(stringin, "$(P)MAIN:ERRORS:RBV")
{
	field(DESC, "LabVIEW 'MAIN Errors'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)MAIN:ERRORS")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "MAIN Target" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
###record(ai, "$(P)MAIN:TARGET:RBV")
###{
###	field(DESC, "LabVIEW 'MAIN Target'")
###    field(DTYP, "asynFloat64")
###    field(INP,  "@asyn(lvfp,0,0)MAIN_TARGET")
###    field(PREC, "3")
###    field(SCAN, ".1 second")
###}

# Write to LabVIEW control "MAIN Target" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ao, "$(P)MAIN:TARGET")
{
	field(DESC, "LabVIEW 'MAIN Target'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)MAIN_TARGET")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "MAIN Set" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)MAIN:SET:RBV")
{
	field(DESC, "LabVIEW 'MAIN Set'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)MAIN:SET")
    field(SCAN, ".1 second")
    field(ZNAM, "Set")
    field(ONAM, "")
}

# Write to LabVIEW control "MAIN Set" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bo, "$(P)MAIN:SET")
{
	field(DESC, "LabVIEW 'MAIN Set'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)MAIN:SET")
    field(ZNAM, "Set")
    field(ONAM, "")
}


# Read LabVIEW control/indicator "X Output" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ai, "$(P)X:OUT:RBV")
{
	field(DESC, "LabVIEW 'X Output'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)X:OUT")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "X Status" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(stringin, "$(P)X:STATUS:RBV")
{
	field(DESC, "LabVIEW 'X Status'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)X:STATUS")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "X Ready?" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)X:READY:RBV")
{
	field(DESC, "LabVIEW 'X Ready?'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)X:READY")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Read LabVIEW control/indicator "X Errors" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(stringin, "$(P)X:ERRORS:RBV")
{
	field(DESC, "LabVIEW 'X Errors'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)X:ERRORS")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "X Target" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
###record(ai, "$(P)X:TARGET:RBV")
###{
###	field(DESC, "LabVIEW 'X Target'")
###    field(DTYP, "asynFloat64")
###    field(INP,  "@asyn(lvfp,0,0)X:TARGET")
###    field(PREC, "3")
###    field(SCAN, ".1 second")
###}

# Write to LabVIEW control "X Target" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ao, "$(P)X:TARGET")
{
	field(DESC, "LabVIEW 'X Target'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)X_TARGET")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "X Set" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)X:SET:RBV")
{
	field(DESC, "LabVIEW 'X Set'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)X:SET")
    field(SCAN, ".1 second")
    field(ZNAM, "Set")
    field(ONAM, "")
}

# Write to LabVIEW control "X Set" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bo, "$(P)X:SET")
{
	field(DESC, "LabVIEW 'X Set'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)X:SET")
    field(ZNAM, "Set")
    field(ONAM, "")
}


# Read LabVIEW control/indicator "Y Errors" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(stringin, "$(P)Y:ERRORS:RBV")
{
	field(DESC, "LabVIEW 'Y Errors'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)Y:ERRORS")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Y Ready?" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)Y:READY:RBV")
{
	field(DESC, "LabVIEW 'Y Ready?'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Y:READY")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Read LabVIEW control/indicator "Y Status" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(stringin, "$(P)Y:STATUS:RBV")
{
	field(DESC, "LabVIEW 'Y Status'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)Y:STATUS")
    field(SCAN, ".1 second")
}


# Read LabVIEW control/indicator "Y Set" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)Y:SET:RBV")
{
	field(DESC, "LabVIEW 'Y Set'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Y:SET")
    field(SCAN, ".1 second")
    field(ZNAM, "Set")
    field(ONAM, "")
}

# Write to LabVIEW control "Y Set" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bo, "$(P)Y:SET")
{
	field(DESC, "LabVIEW 'Y Set'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)Y:SET")
    field(ZNAM, "Set")
    field(ONAM, "")
}


# Read LabVIEW control/indicator "Y Output" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ai, "$(P)Y:OUT:RBV")
{
	field(DESC, "LabVIEW 'Y Output'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Y:OUT")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Y Target" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ai, "$(P)Y:TARGET:RBV")
{
	field(DESC, "LabVIEW 'Y Target'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Y:TARGET")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "Y Target" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ao, "$(P)Y:TARGET")
{
	field(DESC, "LabVIEW 'Y Target'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Y:TARGET")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "Z Errors" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(stringin, "$(P)Z:ERRORS:RBV")
{
	field(DESC, "LabVIEW 'Z Errors'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)Z:ERRORS")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Z Ready?" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)Z:READY:RBV")
{
	field(DESC, "LabVIEW 'Z Ready?'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Z:READY")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Read LabVIEW control/indicator "Z Status" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(stringin, "$(P)Z:STATUS:RBV")
{
	field(DESC, "LabVIEW 'Z Status'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)Z:STATUS")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Z Set" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)Z:SET:RBV")
{
	field(DESC, "LabVIEW 'Z Set'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Z:SET")
    field(SCAN, ".1 second")
    field(ZNAM, "Set")
    field(ONAM, "")
}

# Write to LabVIEW control "Z Set" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bo, "$(P)Z:SET")
{
	field(DESC, "LabVIEW 'Z Set'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)Z:SET")
    field(ZNAM, "Set")
    field(ONAM, "")
}


# Read LabVIEW control/indicator "Z Output" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ai, "$(P)Z:OUT:RBV")
{
	field(DESC, "LabVIEW 'Z Output'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Z:OUT")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Z Target" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ai, "$(P)Z:TARGET:RBV")
{
	field(DESC, "LabVIEW 'Z Target'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Z:TARGET")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "Z Target" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ao, "$(P)Z:TARGET")
{
	field(DESC, "LabVIEW 'Z Target'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Z:TARGET")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "Operation Mode" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
# record(mbbi, "$(P)OPMODE:RBV")
# {
	# field(DESC, "LabVIEW 'Operation Mode'")
    # field(DTYP, "asynInt32")
    # field(INP,  "@asyn(lvfp,0,0)OPMODE")
    # field(SCAN, ".1 second")

    # field(ZRVL, 0)
    # field(ZRST, "High Field Mode")
        
    # field(ONVL, 1)
    # field(ONST, "Low Field Mode")
        
    # field(TWVL, 2)
    # field(TWST, "Z Switching Mode")
        
    # field(THVL, 3)
    # field(THST, "Idle")
        
# }

# Write to LabVIEW control "Operation Mode" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(mbbo, "$(P)OPMODE")
{
	field(DESC, "LabVIEW 'Operation Mode'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)OPMODE")

    field(ZRVL, 0)
    field(ZRST, "High Field Mode")
        
    field(ONVL, 1)
    field(ONST, "Low Field Mode")
        
    field(TWVL, 2)
    field(TWST, "Z Switching Mode")
        
    field(THVL, 3)
    field(THST, "Idle")
        
}


# Read LabVIEW control/indicator "Hall Sensor 1" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ai, "$(P)HALL:SENS1:RBV")
{
	field(DESC, "LabVIEW 'Hall Sensor 1'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)HALL:SENS1")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Hall Sensor 2" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ai, "$(P)HALL:SENS2:RBV")
{
	field(DESC, "LabVIEW 'Hall Sensor 2'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)HALL:SENS:2")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Min to Target" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(ai, "$(P)MAIN:TARGET:MINTO:RBV")
{
	field(DESC, "LabVIEW 'Min to Target'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAIN:TARGET:MINTO")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Left ON/OFF" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)COMP:LEFT:ON:RBV")
{
	field(DESC, "LabVIEW 'Left ON/OFF'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)COMP:LEFT:ON")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Read LabVIEW control/indicator "Left Error LED" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)COMP:LEFT:ERROR:STATUS:RBV")
{
	field(DESC, "LabVIEW 'Left Error LED'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)COMP:LEFT:ERROR:STATUS")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Read LabVIEW control/indicator "Left Compressor Error Text" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(stringin, "$(P)COMP:LEFT:ERROR:TEXT:RBV")
{
	field(DESC, "LabVIEW 'Left Compressor Error Text'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)COMP:LEFT:ERROR:TEXT")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Right ON/OFF" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)COMP:RIGHT:ON:RBV")
{
	field(DESC, "LabVIEW 'Right ON/OFF'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)COMP:RIGHT:ON")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Read LabVIEW control/indicator "Right Error LED" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(bi, "$(P)COMP:RIGHT:ERROR:STATUS:RBV")
{
	field(DESC, "LabVIEW 'Right Error LED'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)COMP:RIGHT:ERROR:STATUS")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Read LabVIEW control/indicator "Right Compressor Error Text" on "C:\Labview Modules\Instruments\HIFI\Cryomag\Client Side\HIFI - Cryomag.llb\HIFI - Cryomag - Front Panel.vi"
record(stringin, "$(P)COMP:RIGHT:ERROR:TEXT:RBV")
{
	field(DESC, "LabVIEW 'Right Compressor Error Text'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)COMP:RIGHT:ERROR:TEXT")
    field(SCAN, ".1 second")
}


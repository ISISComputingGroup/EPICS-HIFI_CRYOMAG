<?xml version="1.0" encoding="UTF-8"?>
<!--Initially generated by $Id: lvstrings2input.xsl 2277 2014-11-30 18:36:45Z faa59 $ -->
<lvinput xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://epics.isis.rl.ac.uk/lvDCOMinput/1.0" xsi:schemaLocation="http://epics.isis.rl.ac.uk/lvDCOMinput/1.0 lvDCOMinput.xsd">
  <!--Full path to external interface vi used for triggering LabVIEW events when extint="true" below -->
  <extint path="C:/Labview Modules/Common/External Interface/External Interface.llb/External Interface - Set Value.vi"/>
  <!--Definition of a configSection, the second argument of the IOC lvDCOMConfigure() command -->
  <section name="frontpanel">
    <!--TODO: edit path attribute in <vi /> to contain a full absolute path, you can also use any EPICS macro known to the IOC e.g. $(TOP) -->
    <vi path="C:/Labview Modules/Instruments/HIFI/Cryomag/Client Side/HIFI - Cryomag.llb/HIFI - Cryomag - Front Panel - DS and EI.vi">
      <!--The <param /> maps an asyn driver parameter "name" (referenced in the EPICS .db) to the LabVIEW item "target" -->
      <!--TODO: set extint="true" for controls that need LabVIEW events triggering when they are written to -->
      <param name="MAIN:OUT" type="float64">
        <read method="GCV" target="MAIN Output"/>
      </param>
      <param name="MESSAGE" type="string">
        <read method="GCV" target="Message"/>
      </param>
      <param name="MAIN:STATUS" type="string">
        <read method="GCV" target="MAIN Status"/>
      </param>
      <param name="MAIN:READY" type="boolean">
        <items/>
        <read method="GCV" target="MAIN Ready?"/>
      </param>
      <param name="MAIN:ERRORS" type="string">
        <read method="GCV" target="MAIN Errors"/>
      </param>
      <param name="MAIN_TARGET" type="float64">
        <set method="SCV" extint="true" target="MAIN Target 1"/>
      </param>
      <param name="MAIN:SET" type="boolean">
        <items>
          <item name="Set" value="0"/>
        </items>
        <set method="SCV" extint="true" target="MAIN Set"/>
      </param>
      <param name="X:OUT" type="float64">
        <read method="GCV" target="X Output"/>
      </param>
      <param name="X:STATUS" type="string">
        <read method="GCV" target="X Status"/>
      </param>
      <param name="X:READY" type="boolean">
        <items/>
        <read method="GCV" target="X Ready?"/>
      </param>
      <param name="X:ERRORS" type="string">
        <read method="GCV" target="X Errors"/>
      </param>
      <param name="X_TARGET" type="float64">
        <set method="SCV" extint="true" target="X Target 1"/>
      </param>
      <param name="X:SET" type="boolean">
        <items>
          <item name="Set" value="0"/>
        </items>
        <set method="SCV" extint="true" target="X Set"/>
      </param>
      <param name="Y:ERRORS" type="string">
        <read method="GCV" target="Y Errors"/>
      </param>
      <param name="Y:READY" type="boolean">
        <items/>
        <read method="GCV" target="Y Ready?"/>
      </param>
      <param name="Y:STATUS" type="string">
        <read method="GCV" target="Y Status"/>
      </param>
      <param name="Y:SET" type="boolean">
        <items>
          <item name="Set" value="0"/>
        </items>
        <set method="SCV" extint="true" target="Y Set"/>
      </param>
      <param name="Y:OUT" type="float64">
        <read method="GCV" target="Y Output"/>
      </param>
      <param name="Y:TARGET" type="float64">
        <set method="SCV" extint="true" target="Y Target"/>
      </param>
      <param name="Z:ERRORS" type="string">
        <read method="GCV" target="Z Errors"/>
      </param>
      <param name="Z:READY" type="boolean">
        <items/>
        <read method="GCV" target="Z Ready?"/>
      </param>
      <param name="Z:STATUS" type="string">
        <read method="GCV" target="Z Status"/>
      </param>
      <param name="Z:SET" type="boolean">
        <items>
          <item name="Set" value="0"/>
        </items>
        <set method="SCV" extint="true" target="Z Set"/>
      </param>
      <param name="Z:OUT" type="float64">
        <read method="GCV" target="Z Output"/>
      </param>
      <param name="Z:TARGET" type="float64">
        <set method="SCV" extint="true" target="Z Target"/>
      </param>
      <param name="OPMODE" type="ring">
        <items>
          <item name="High Field Mode" value="0"/>
          <item name="Low Field Mode" value="1"/>
          <item name="Z Switching Mode" value="2"/>
          <item name="Idle" value="3"/>
        </items>
        <set method="SCV" extint="true" target="Operation Mode 1"/>
      </param>
	  <param name="OPMODE:IND" type="ring">
        <items>
          <item name="High Field Mode" value="0"/>
          <item name="Low Field Mode" value="1"/>
          <item name="Z Switching Mode" value="2"/>
          <item name="Idle" value="3"/>
        </items>
        <read method="GCV" target="Operation Mode Ind"/>
      </param>
      <param name="HALL:SENS1" type="float64">
        <read method="GCV" target="Hall Sensor 1"/>
      </param>
      <param name="HALL:SENS2" type="float64">
        <read method="GCV" target="Hall Sensor 2"/>
      </param>
      <param name="MAIN:TARGET:MINTO" type="float64">
        <read method="GCV" target="Min to Target"/>
      </param>
      <param name="COMP:LEFT:ON" type="boolean">
        <items/>
        <read method="GCV" target="Left ON/OFF"/>
      </param>
      <param name="COMP:LEFT:ERROR:STATUS" type="boolean">
        <items/>
        <read method="GCV" target="Left Error LED"/>
      </param>
      <param name="COMP:LEFT:ERROR:TEXT" type="string">
        <read method="GCV" target="Left Compressor Error Text"/>
      </param>
      <param name="COMP:RIGHT:ON" type="boolean">
        <items/>
        <read method="GCV" target="Right ON/OFF"/>
      </param>
      <param name="COMP:RIGHT:ERROR:STATUS" type="boolean">
        <items/>
        <read method="GCV" target="Right Error LED"/>
      </param>
      <param name="COMP:RIGHT:ERROR:TEXT" type="string">
        <read method="GCV" target="Right Compressor Error Text"/>
      </param>
    </vi>
  </section>
</lvinput>
